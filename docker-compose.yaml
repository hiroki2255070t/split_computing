version: '3.8'
services:
  selenium:
    build:
      context: ./browser
      dockerfile: Dockerfile.browser
    container_name: selenium
    ports:
      - "4444:4444"
      - "5900:5900"
      - "7900:7900"
    cap_add:
      - NET_ADMIN
    volumes:
      - ./browser/browser_script.py:/app/browser_script.py
    networks:
      custom-net:
        ipv4_address: 172.20.0.2
    depends_on:
      - websocket-server
      - webapp

  websocket-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.cpu
    container_name: websocket-server
    env_file:
    - ./backend/.env
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    volumes:
      - ./backend/models:/app/models:ro
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://127.0.0.1:8080/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"]
      interval: 30s
      timeout: 5s
      start_period: 30s
    cap_add:
      - NET_ADMIN
    networks:
      custom-net:
        ipv4_address: 172.20.0.3

  webapp:
    build:
      context: ./frontend
      dockerfile: Dockerfile.app
      target: ${BUILD_TARGET:-development}  # デフォルトはdevelopment
      platforms: 
        - linux/arm64
    container_name: webapp
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app  # 開発用にホストのソースをマウント
      - /app/node_modules 
    networks:
      custom-net:
        ipv4_address: 172.20.0.4

networks:
  custom-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16